---
- name: Install required packages on CentOS
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - unzip
    - tar
    - btrfs-progs
    - libseccomp
    - util-linux
    - socat
    - libselinux-python
  when: ansible_os_family == "RedHat"

- name: Install required packages on Ubuntu
  package:
    name:
      - unzip
      - tar
      - util-linux
      - socat
    state: latest
  when: ansible_distribution == "Ubuntu"

- name: Get Containerd
  unarchive:
    src: "{{ containerd_fetch_uri | default('https://github.com/containerd/containerd/releases/download/v{{ containerd_release_version }}/containerd-{{ containerd_release_version }}.linux-amd64.tar.gz') }}"
    dest: "/"
    remote_src: yes

- name: Create directories for cni config and plugin files
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ cni_conf_dir }}"
    - "{{ cni_bin_dir }}"

- name: Get cni binary
  unarchive:
    src: "{{ cni_fetch_uri | default('https://github.com/containernetworking/plugins/releases/download/{{ cni_version }}/cni-plugins-amd64-{{ cni_version }}.tgz') }}"
    dest: "{{ cni_bin_dir }}"
    remote_src: yes

- name: Create a directory for containerd config
  file:
    path: /etc/containerd
    state: directory

- name: Add containerd config file
  blockinfile:
    path: /etc/containerd/config.toml
    create: yes
    block: |
      [plugins.cri]
         enable_tls_streaming = true

- name: Copy containerd systemd unit file
  copy:
    src: containerd.service
    dest: /lib/systemd/system

- name: Start containerd service
  systemd:
    name: containerd
    daemon_reload: yes
    state: started
    enabled: yes

- name: Load br_netfilter kernel module
  modprobe:
    name: br_netfilter
    state: present

- name: Set bridge-nf-call-iptables
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1

- name: Set IP forwarding on
  sysctl:
    name: net.ipv4.ip_forward
    value: 1

- name: Disable selinux
  selinux:
    state: disabled
  when: ansible_os_family == "RedHat"

- name: Disable selinux in config file
  lineinfile:
    dest: /etc/selinux/config
    state: present
    regexp: '^SELINUX='
    line: 'SELINUX=disabled'
  when: ansible_os_family == "RedHat"
